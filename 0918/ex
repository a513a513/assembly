# 2.8 Review Questions

### 1. ESP 외에 스택의 변수를 가리키는 레지스터는?

**정답:** EBP (Base Pointer)

**풀이:** ESP는 스택의 top(현재 push/pop 위치)을 가리키고, EBP는 함수 호출 시 지역 변수와 매개변수를 접근하기 위한 기준점으로 사용된다. 즉, 스택 프레임 구조에서 ESP는 변동되지만, EBP는 고정된 기준점 역할을 한다.

---

### 2. CPU 상태 플래그 4가지 이상

**정답:** CF, ZF, SF, OF

**풀이:** CPU 연산 후 결과 상태를 저장하는 플래그 레지스터에는 여러 상태 비트가 있다.

- CF(Carry): 부호 없는 연산에서 자리올림 발생 여부
- ZF(Zero): 연산 결과가 0인지
- SF(Sign): 결과가 음수인지
- OF(Overflow): 부호 있는 연산에서 오버플로우 발생 여부

---

### 3. 부호 없는 연산 결과가 너무 큰 경우 세트되는 플래그

**정답:** CF (Carry Flag)

**풀이:** unsigned 연산에서 결과가 대상 레지스터를 넘어가면 carry가 발생한다.

---

### 4. 부호 있는 연산 결과가 너무 크거나 작은 경우 세트되는 플래그

**정답:** OF (Overflow Flag)

**풀이:** signed 연산에서는 carry가 아니라 overflow 여부를 확인한다. 예: 127+1=128은 8비트 signed 범위를 벗어나므로 OF=1.

---

### 5. REX 프리픽스와 32비트 오퍼랜드 크기에서 R8D 사용 가능 여부

**정답:** True

**풀이:** REX 프리픽스는 x86-64에서 추가된 확장으로, R8~R15 레지스터를 사용할 수 있게 한다. R8D는 R8의 하위 32비트 레지스터다.

---

### 6. 음수 결과가 나오면 세트되는 플래그

**정답:** SF (Sign Flag)

**풀이:** 결과의 최상위 비트(MSB)가 1이면 음수이므로 SF=1.

---

### 7. 부동소수점 연산을 담당하는 CPU 부분

**정답:** FPU (Floating Point Unit)

**풀이:** 과거에는 CPU 외부에 있었으나, 지금은 대부분 CPU 내부에 통합되어 있다.

---

### 8. 32비트 프로세서에서 FPU 데이터 레지스터 크기

**정답:** 80비트

**풀이:** x87 FPU 스택 레지스터는 80비트 확장 정밀도를 지원한다. 비록 메모리 저장은 32/64비트도 가능하지만 내부 연산은 80비트.

---

### 9. x86-64 ISA가 x86 ISA와 호환되는가?

**정답:** True

**풀이:** x86-64는 기존 x86과 완전 호환성을 유지하기 때문에 32비트/16비트 프로그램도 실행 가능하다.

---

### 10. 64비트 CPU가 실제로 모든 64비트 주소 공간을 쓰는가?

**정답:** False

**풀이:** 현재 64비트 CPU는 물리 주소 공간을 전부 사용하지 않고 보통 48~57비트만 주소 변환에 사용한다.

---

### 11. Itanium ISA와 x86 ISA의 관계

**정답:** True

**풀이:** Itanium은 IA-64라는 완전히 새로운 아키텍처로, x86과는 호환되지 않는다.

---

### 12. SRAM이 DRAM보다 저렴한가?

**정답:** False

**풀이:** SRAM은 트랜지스터만 사용해 속도가 빠르지만 제조 비용이 비싸다. DRAM은 축전기+트랜지스터 구조라 더 저렴하다.

---

### 13. REX 프리픽스가 있을 때 RDI(64비트) 사용 가능 여부

**정답:** True

**풀이:** REX 프리픽스는 64비트 레지스터 사용을 허용한다. 따라서 RDI 전체 64비트 레지스터 사용 가능.

---

### 14. 64비트 모드에서 16비트 real mode는 가능하지만 v8086 모드는 불가한가?

**정답:** True

**풀이:** x86-64 CPU는 보호 모드와 롱 모드를 지원하지만, 가상 8086 모드는 롱 모드에서 사용할 수 없다.

---

### 15. x86-64 CPU가 x86보다 4개 더 많은 범용 레지스터를 갖는가?

**정답:** False

**풀이:** x86은 8개, x86-64는 16개(GPR) → 8개가 더 많음.

---

### 16. Windows 64비트가 v8086 모드를 지원하지 않는가?

**정답:** True

**풀이:** 보호 모드 기반 가상화 환경에서만 실행 가능하고, Windows x64에서는 v8086 모드 미지원.

---

### 17. DRAM은 자외선으로만 지울 수 있는가?

**정답:** False

**풀이:** 자외선으로 지우는 것은 EPROM. DRAM은 전기적 refresh 필요.

---

### 18. 64비트 모드에서 최대 8개의 부동소수점 레지스터만 사용 가능한가?

**정답:** False

**풀이:** 전통적 x87 스택은 8개지만, SSE/XMM은 16개 이상 레지스터를 제공.

---

### 19. 버스는 단순한 플라스틱 케이블인가?

**정답:** False

**풀이:** 버스는 데이터/주소/제어 신호를 주고받는 전기적 통로. 단순 케이블 개념이 아님.

---

### 20. CMOS RAM이 SRAM과 동일하여 전력이나 refresh 없이 값 유지하는가?

**정답:** False

**풀이:** CMOS RAM은 배터리 전원이 필요. SRAM은 전원이 유지되면 refresh 불필요. 같지 않음.

---

### 21. PCI 커넥터가 그래픽카드, 사운드카드에 쓰이는가?

**정답:** True

**풀이:** PCI는 범용 확장 슬롯으로 그래픽카드, 사운드카드, 네트워크카드 등에 사용됨.

---

### 22. 8259A가 하드웨어 외부 인터럽트를 처리하는가?

**정답:** True

**풀이:** 8259A PIC는 하드웨어 장치에서 들어오는 인터럽트를 CPU에 전달.

---

### 23. PCI의 풀네임이 Programmable Component Interface인가?

**정답:** False

**풀이:** PCI는 **Peripheral Component Interconnect**.

---

### 24. VRAM의 의미가 Virtual RAM인가?

**정답:** False

**풀이:** VRAM은 **Video RAM** (그래픽 처리용).

---

### 25. 어셈블리어 프로그램은 어느 수준에서 I/O 조작 가능한가?

**정답:** 시스템 레벨, 하드웨어 포트 접근 레벨

**풀이:** 고급 언어는 OS API를 호출하지만, 어셈블리는 `IN`, `OUT` 명령으로 직접 I/O 포트에 접근 가능하다.

---

### 26. 게임이 사운드를 하드웨어 포트로 직접 보내는 이유

**정답:** 지연 시간(latency) 최소화

**풀이:** 운영체제 드라이버/소프트웨어 계층을 거치면 지연이 커진다. 게임은 실시간성이 중요하므로 직접 사운드 카드 포트에 접근해 즉시 출력한다.
